// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  twitch_id      String          @unique
  gameParameters GameParameter[]
  interComments  InterComment[]
  birthday       Birthday?
  isAdmin        Boolean         @default(false)
  votes          Vote[]
}

model PlatformConfigInterComment {
  id            String  @id @default(uuid())
  authorization Boolean
}

model ConfigInterComment {
  id    String @id @default(uuid())
  key   String @unique
  value String
}

model Birthday {
  id       String @id @default(uuid())
  day      Int
  month    Int
  user     User   @relation(fields: [user_id], references: [id])
  username String @unique
  user_id  String @unique
}

model GameParameter {
  id      String @id @default(uuid())
  value   Int
  name    String
  game    Game   @relation(fields: [game_id], references: [id])
  game_id String
  user    User   @relation(fields: [user_id], references: [id])
  user_id String
}

model Game {
  id             String          @id @default(uuid())
  gameParameters GameParameter[]
  name           String          @unique
}

model InterComment {
  id        String   @id @default(uuid())
  comment   String
  user      User     @relation(fields: [user_id], references: [id])
  user_id   String
  username  String
  votes     Vote[]
  createdAt DateTime @default(now()) // Se establece automáticamente al crear un registro
  updatedAt DateTime @default(now()) @updatedAt // Se actualiza automáticamente en cada cambio
}

model Vote {
  id         String       @id @default(uuid())
  value      Boolean
  user       User         @relation(fields: [user_id], references: [id])
  user_id    String
  comment    InterComment @relation(fields: [comment_id], references: [id])
  comment_id String

  @@unique([user_id, comment_id])
}
